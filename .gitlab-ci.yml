workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  # Executa o pipeline apenas na branch main
    - if: '$CI_COMMIT_BRANCH == "qa"' # Executa o pipeline apenas na branch qa

variables:
  VERSION: "2.0"
  PROJECT_TAG: "port-gcp"

stages:
  - build
  - deploy
  - cleanup

build_frontend:
  stage: build
  tags:
    - $PROJECT_TAG
  script:
    - docker build -t vsantosmt/portfolio-frontend:$VERSION ./frontend

build_backend:
  stage: build
  tags:
    - $PROJECT_TAG
  needs:
    - build_frontend
  script:
    - docker build -t vsantosmt/portfolio-backend:$VERSION ./backend

build_nginx:
  stage: build
  tags:
    - $PROJECT_TAG
  needs:
    - build_backend
  script:
    - docker build -t vsantosmt/portfolio-nginx:$VERSION ./nginx

push_image:
  stage: build
  tags:
    - $PROJECT_TAG
  needs:
    - build_frontend
    - build_backend
    - build_nginx
  script:
    - docker push vsantosmt/portfolio-frontend:$VERSION
    - docker push vsantosmt/portfolio-backend:$VERSION
    - docker push vsantosmt/portfolio-nginx:$VERSION
      
execute_container:
  stage: deploy
  tags:
    - $PROJECT_TAG
  needs:
    - push_image
  before_script:
    - chmod +x script/remove_container.sh # Concede permissao de execucao
    - ./script/remove_container.sh # Executa o script
  script:
    - docker run -dti --name webserver-frontend -p 5173:80 --network proxy vsantosmt/portfolio-frontend:$VERSION
    - docker run -dti --name webserver-backend -p 5000:5000 --network proxy vsantosmt/portfolio-backend:$VERSION
    - docker run -dti --name webserver-nginx -p 80:80 -p 443:443 --network proxy vsantosmt/portfolio-nginx:$VERSION #

cleanup_images:
  stage: cleanup
  tags:
    - $PROJECT_TAG
  needs:
    - execute_container
  script:
    - chmod +x script/cleanup_images.sh # Concede permissao de execucao
    - ./script/cleanup_images.sh # Executa o script
