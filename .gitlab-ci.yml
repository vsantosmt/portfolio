workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  # Executa o pipeline apenas na branch main
    - if: '$CI_COMMIT_BRANCH == "qa"' # Executa o pipeline apenas na branch qa

variables:
  VERSION: "2.0"
  PROJECT_TAG: "port-oci"

stages:
  - build
  - deploy

build_frontend:
  stage: build
  tags:
    - $PROJECT_TAG
  script:
    - docker build -t vsantosmt/portfolio-frontend:$VERSION ./frontend

build_backend:
  stage: build
  tags:
    - $PROJECT_TAG
  needs:
    - build_frontend
  script:
    - docker build -t vsantosmt/portfolio-backend:$VERSION ./backend

build_nginx_ssl:
  stage: build
  tags:
    - $PROJECT_TAG
  needs:
    - build_backend
  script:
    - docker build -t vsantosmt/portfolio-nginx:$VERSION ./nginx
    - docker build -t vsantosmt/portoflio-ssl:$VERSION ./certbot

push_image:
  stage: build
  tags:
    - $PROJECT_TAG
  needs:
    - build_frontend
    - build_backend
  script:
    - docker push vsantosmt/portfolio-frontend:$VERSION
    - docker push vsantosmt/portfolio-backend:$VERSION
    - docker push vsantosmt/portfolio-nginx:$VERSION
    - docker push vsantosmt/portoflio-ssl:$VERSION
      
execute_container:
  stage: deploy
  tags:
    - $PROJECT_TAG
  needs:
    - push_image
  before_script:
     - |
          CONTAINERS_RUNNING=$(docker ps -aq)

          if [ -n "$CONTAINERS_RUNNING" ]; then
            echo "Containers em execução encontrados. Removendo containers..."
            docker stop $CONTAINERS_RUNNING
            docker rm -f $CONTAINERS_RUNNING
          else
            echo "Nenhum container em execução encontrado. Pulando remoção..."
          fi
  script:
    - docker run -dti --name webserver-frontend -p 5173:80 --network proxy vsantosmt/portfolio-frontend:$VERSION
    - docker run -dti --name webserver-backend -p 5000:5000 --network proxy vsantosmt/portfolio-backend:$VERSION
    - docker run -dti --name webserver-nginx -p 80:80 -p 443:443 --network proxy vsantosmt/portfolio-nginx:$VERSION

ssl_generate:
  stage: deploy
  tags:
    - $PROJECT_TAG
  needs:
    - execute_container
  script:
    - docker run -dti --name webserver-certbot --network proxy -v /path/to/certbot/conf:/etc/letsencrypt -v /path/to/certbot/www:/var/www/certbot vsantosmt/portoflio-ssl:$VERSION certbot certonly --webroot -w /var/www/certbot -d vgsenterprise.online -d www.vgsenterprise.online


