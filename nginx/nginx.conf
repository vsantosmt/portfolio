events {
    worker_connections 1024;  # Ajuste conforme necessário
}

http {
    server {
        listen 80;
        server_name vgsenterprise.online www.vgsenterprise.online;

         # Redirecionamento para HTTPS
        location / {
            return 301 https://$host$request_uri;
        }

        # Para Certbot, validação dos desafios
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
            allow all;
        }

    }

    server {
        listen 443 ssl;
        server_name vgsenterprise.online www.vgsenterprise.online;

        # Configurações do SSL (Certificados gerados pelo Certbot)
        ssl_certificate /etc/letsencrypt/live/vgsenterprise.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/vgsenterprise.online/privkey.pem;

         # Configurações SSL recomendadas
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
        ssl_prefer_server_ciphers on;


        # Proxy para o frontend (Vite)
        location / {
            proxy_pass http://webserver-frontend:80;  # Nome do serviço 'frontend' no Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy para o backend (Flask)
        location /api/ {
            proxy_pass http://webserver-backend:5000;  # Nome do serviço 'backend' no Docker Compose
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
